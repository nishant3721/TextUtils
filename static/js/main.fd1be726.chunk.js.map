{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","selectText","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","message","defaultProps","aboutText","App","SetMode","setAlert","msgType","msg","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd1be726.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === `light` ? `dark` : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    const newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"success\", \"Text Converted to Uppercase!\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    const newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"success\", \"Text Converted to Lowercase!\");\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"success\", \"Text Cleared!\");\r\n  };\r\n\r\n  const handleCopyText = () => {\r\n    const selectText = document.getElementById(\"myBox\");\r\n    selectText.select();\r\n    navigator.clipboard.writeText(selectText.value);\r\n    props.showAlert(\"success\", \"Copied to Clipboard!\");\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    const newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"success\", \"Extra Spaces Removed!\");\r\n  };\r\n\r\n  const handleTextareaOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === `light` ? `black` : `white` }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            style={{\r\n              backgroundColor: props.mode === `light` ? `white` : `#021228`,\r\n              color: props.mode === `light` ? `black` : `white`,\r\n            }}\r\n            onChange={handleTextareaOnChange}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"mx-2 btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"mx-2 btn btn-primary\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"mx-2 btn btn-primary\" onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"mx-2 btn btn-primary\" onClick={handleCopyText}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"mx-2 btn btn-primary\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === `light` ? `black` : `white` }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          <strong>{text.split(\" \").length}</strong> words and{\" \"}\r\n          <strong>{text.length}</strong> characters\r\n        </p>\r\n        <p>\r\n          <strong>{0.008 * text.split(\" \").length}</strong> Minutes to read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the text box above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong> {capitalize(props.alert.type)}! </strong>\r\n        {props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport React from \"react\";\n// import About from \"./Components/About\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, SetMode] = useState(`light`);\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msgType, msg) => {\n    setAlert({\n      type: msgType,\n      message: msg,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === `dark`) {\n      SetMode(`light`);\n      document.body.style.backgroundColor = `white`;\n      showAlert(\"success\", \"Light mode Enabled!\");\n    } else {\n      SetMode(`dark`);\n      document.body.style.backgroundColor = `#021228`;\n      showAlert(\"success\", \"Dark mode Enabled!\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n      </div>\n\n      {/* <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}